#+TITLE: 回帰分析
#+SUBTITLE: 第13講 - 変数間の関係を推測する
#+AUTHOR: 村田 昇
#+EMAIL: noboru.murata@gmail.com
#+DATE: 
# Time-stamp: <2023-07-14 22:52:25 mura>
:REVEAL:
#+INCLUDE: "./reveal.js/org/mycourse.org"
#+STARTUP: hidestars content indent
# C-c C-x C-v でinlineを切り替え
# <m C-i でlatex block (math env用)
# C-c '
:END:

* 講義概要
- 回帰分析
- 回帰係数の推定
  - 点推定
  - 区間推定
- 回帰係数の検定
  - 係数の有意性
- 決定係数

#+begin_src R :eval no :exports none :tangle yes
  ### 第13講 練習問題解答例
#+end_src
#+begin_src R :exports none
  setwd("~/Desktop/lectures/u-tokyo/spring/course")
#+end_src

* COMMENT メモ
- 重回帰の問題
- MC実験を付けた方が良いかも
  
  
* 回帰分析
** 回帰分析
- データのある変量をその他の変量を用いて説明・予測するモデル
  (*回帰モデル*)を構築するための分析法
- 変量の分類
  - 説明する側 : *説明変数* (または独立変数，共変量など)
  - 説明される側 : *目的変数* (または被説明，従属，応答変数など)
- 説明変数・目的変数ともに複数個あってもよい 
  - 目的変数は通常は1つ (複数の場合は個別に回帰モデルを構築)
  - 説明変数が1つの場合を *単回帰*, 2つ以上の場合を *重回帰*
  - この講義では単回帰のみ扱う

#+reveal: split
#+begin_src R :file figs/r-brainbody.png :exports results :results graphics
  ### 線形回帰分析(単回帰)の例
  ### - Brain and Body Weights for 28 Species
  library("MASS") 
  library("tidyverse") 
  library("ggfortify")
  data(Animals)
  ## 回帰分析 (単回帰)
  model <- lm(log(brain) ~ log(body), data=Animals)
  ## 区間推定
  yc <- exp(predict(model, newdata=Animals, interval="confidence"))
  colnames(yc) <- paste("c",colnames(yc),sep=".")
  yp <- exp(predict(model, newdata=Animals, interval="prediction"))
  colnames(yp) <- paste("p",colnames(yp),sep=".")
  mydat <- cbind(Animals, yc, yp)
  ## 回帰式および信頼区間・予測区間の表示
  ggplot(mydat, aes(body, brain, label=rownames(mydat))) +
      scale_x_log10() + scale_y_log10() + # log-log plot
      geom_line(aes(y=c.fit), color="dodgerblue", lwd=1.2) +
      geom_ribbon(aes(ymin=c.lwr,ymax=c.upr), fill="blue", alpha=0.2)+
      geom_ribbon(aes(ymin=p.lwr,ymax=p.upr), fill="blue", alpha=0.1)+
      geom_text(size=3) + 
      labs(title="Brain and Body Weights", x="body [kg]", y="brain [g]")
#+end_src
#+CAPTION: 脳の重さと体重の関係
#+NAME: fig:r-brainbody
#+ATTR_HTML: :height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/r-brainbody.png]]

** 回帰モデル
- 説明変数 : \(X\)
- 目的変数 : \(Y\)
- \(Y\) を \(X\) で説明する関係式として一次関数を考える
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      Y=\alpha+\beta X\quad\text{(線形回帰モデル)}
    \end{equation}
  #+end_src
  #+end_quote
  - \(\alpha\): *定数項*
  - \(\beta\): \(X\) の *回帰係数*
- *注意* : 非線形な関係への対応
  - 適切な変数変換(二乗, 対数など)を施して線形な関係に変換
  - 弱い非線形性を線形で近似


* 回帰係数の点推定
** 回帰係数の点推定
- \(n\) 個の説明変数と目的変数の組 \((X,Y)\) を観測
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      (X_1,Y_1),(X_2,Y_2),\dotsc,(X_n,Y_n)
    \end{equation}
  #+end_src
  #+end_quote
- 回帰モデル : データには観測誤差が含まれる
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      Y_i=\alpha+\beta X_i+\epsilon_i,\quad i=1,\dotsc,n.
    \end{equation}
  #+end_src
  #+end_quote
  - \(\epsilon_1,\epsilon_2,\dotsc,\epsilon_n\) : *誤差項* または *撹乱項*
- 線形回帰モデルのパラメータ \(\alpha,\beta\) を推定

** 分析における仮定
- 説明変数 \(X_1,\dotsc,X_n\) は確率変数ではなく *確定値*
- 説明変数は一定値ではない \\
  (\(X_1=\cdots=X_n\) ではない)
- 誤差項 \(\epsilon_1,\dotsc,\epsilon_n\) は
  独立同分布な確率変数列
- 誤差項は 平均 \(0\) 分散 \(\sigma^2\) 

** 最小二乗法
- 係数 \(\alpha,\beta\) の回帰式で説明できない
  目的変数の変動
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      e_i(\alpha,\beta)=Y_i-(\alpha+\beta X_i)\quad (i=1,\dotsc,n)
    \end{equation}
  #+end_src
  #+end_quote
- 方針
  #+begin_quote
  回帰モデルの当てはまりがよい \\
  \(\Leftrightarrow\)
  \(e_1(\alpha,\beta),\dotsc,e_n(\alpha,\beta)\) の絶対値が小さい
  #+end_quote

#+reveal: split
- 評価基準
  #+begin_quote
  \(e_1(\alpha,\beta),\dotsc,e_n(\alpha,\beta)\) の平方和 (*残差平方和*)
  を最小にするように \(\alpha,\beta\) を決定
  #+begin_src latex
    \begin{equation}
      S(\alpha,\beta)
      =\sum_{i=1}^ne_i(\alpha,\beta)^2
      =\sum_{i=1}^n\{Y_i-(\alpha+\beta X_i)\}^2
    \end{equation}
  #+end_src
  #+end_quote
- *最小二乗推定量*
  #+begin_quote
  \(S(\alpha,\beta)\) を最小にするパラメータの組
  \((\hat{\alpha},\hat{\beta})\)
  #+end_quote

#+reveal: split
- 最小二乗推定量の解
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      \hat{\beta}
      =\frac{\sum_{i=1}^n(X_i-\bar{X})(Y_i-\bar{Y})}{\sum_{i=1}^n(X_i-\bar{X})^2},
      \quad
      \hat{\alpha}=\bar{Y}-\hat{\beta}\bar{X}
    \end{equation}
  #+end_src
  ただし
  #+begin_src latex
    \begin{equation}
      \bar{X}=\frac{1}{n}\sum_{i=1}^nX_i,\quad
      \bar{Y}=\frac{1}{n}\sum_{i=1}^nY_i.
    \end{equation}
  #+end_src
  #+end_quote

  # 回帰モデルの推定には通常 *最小二乗法* が用いられる
  # - \(S(\alpha,\beta)\): *残差平方和*

** R : 回帰分析の関数
- 関数 ~lm()~ : 線形モデルを当てはめる
  #+begin_src R :eval no
    lm(formula, data, subset, na.action, ...)
    ## formula: 式 (目的変数 ~ 説明変数)
    ## data: データフレーム
    ## subset: 対象とする部分データ
    ## na.action: 欠損値の扱い
    ## ...: 他のオプション．詳細は help(lm) を参照
  #+end_src


* 演習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
** 練習問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 東京の気象データを用いて，
  必要であれば適当な期間を抽出し，
  日射量から気温を説明する回帰モデルを構成しなさい．

#+begin_src R :eval no :exports none :tangle yes
    ### 回帰分析の Monte-Carlo 実験
    ## 人工データによる回帰モデルの推定
    alpha <- 2
    beta <- 3
    n <- 20
    sigma <- 0.3
    x <- runif(n)
    epsilon <- rnorm(n,sd=sigma)
    y <- alpha + beta * x + epsilon
    plot(x,y, type="p")
    my_data <- data.frame(x=x,y=y)
    est <- lm(y ~ x, data=my_data)
    summary(est)
    abline(coef=c(alpha,beta),col="red")
    abline(reg=est,col="blue")

    ## 実験
    my_trial <- function(){
      epsilon <- rnorm(n,sd=sigma)
      y <- alpha + beta * x + epsilon # 説明変数は固定しておく
      est <- lm(y ~ x) 
      return(coef(est))
    }
    foo <- replicate(2000,my_trial())
    ## 推定値の分布
    if(Sys.info()["sysname"]=="Darwin"){par(family="HiraginoSans-W4")}
    hist(foo[1,],
         breaks=30, freq=FALSE,
         col="pink",
         xlab=expression(hat(alpha)), main="切片の分布")
    abline(v=alpha,col="orange",lwd=2)
    hist(foo[2,],
         breaks=30, freq=FALSE,
         col="palegreen",
         xlab=expression(hat(beta)), main="傾きの分布")
    abline(v=beta,col="darkgreen",lwd=2)

    ## 推定された回帰式のばらつきの表示
    plot(x,y, type="n",
         main="推定された回帰式のばらつき") # 表示するための適当な領域を指定
    for(i in seq(1,ncol(foo),by=10)) { # 推定された回帰式を間引いて表示
      abline(coef=foo[,i],col="gray90")
    }
    abline(coef=c(alpha,beta),col="red")
    ## 同じ生成モデルでも，生成されたデータによって推定結果がばらつくことがわかる
#+end_src

#+begin_src R :eval no :exports none :tangle yes
  ### 練習問題 回帰モデルの点推定
  ## 気候データによる例
  tw_data <- read.csv("data/tokyo_weather.csv")
  ## データの散布図 (1年分)
  if(Sys.info()["sysname"]=="Darwin"){par(family="HiraginoSans-W4")}
  plot(temp ~ solar, # Y軸 ~ X軸
       data=tw_data,
       pch=20, col="blue")
  ## 
  (my_model <- lm(temp ~ solar, # 目的変数 ~ 説明変数
                 data=tw_data)) # 気温を日射量で説明
  ## 回帰直線の図示 (重ね描き)
  abline(reg=my_model, # 得られた回帰式を用いて描画
         col="royalblue", lwd=2)
  ## 期間を限って分析する
  ## データの散布図 (夏のモデル)
  plot(formula(my_model), # my_model で用いた式を再利用する
       data=tw_data,
       subset=month%in%7:9, # 7月-9月を指定
       pch=20, col="orange")
  (my_model2 <- lm(formula(my_model),
                 data=tw_data,
                 subset=month%in%7:9)) 
  abline(reg=my_model2,
         col="red", lwd=2)
  ## 全データのモデルと夏のモデルを比較する
  plot(formula(my_model),
       data=model.frame(my_model), # my_model で整理されたデータを利用する
       pch=20, col="gray")
  abline(reg=my_model, 
         col="royalblue", lwd=2)
  points(formula(my_model2),
       data=model.frame(my_model2), # my_model2 で整理されたデータを利用する
       pch=20, col="orange")
  abline(reg=my_model2,
         col="red", lwd=2)
#+end_src


* 回帰係数の区間推定
** 誤差項に関する仮定
- \(\epsilon_i\) は正規分布に従う
- 上の仮定より
  \(\hat{\alpha},\hat{\beta}\) は *正規分布* に従う
- 点推定の平均と分散
  #+begin_quote
  #+begin_src latex
    \begin{align}
      &\mathbb{E}[\hat{\alpha}]=\alpha,
      &&\mathbb{E}[\hat{\beta}]=\beta,\\
      &\mathrm{Var}(\hat{\alpha})=\frac{\sigma^2\sum_{i=1}^{n}X_i^2}{n_{i=1}^{n}(X_i-\bar{X})^2},
      &&\mathrm{Var}(\hat{\beta})=\frac{\sigma^2}{\sum_{i=1}^{n}(X_i-\bar{X})^2}
    \end{align}
  #+end_src
  #+end_quote
- \(\sigma^2\) が *既知なら* 正規分布を用いて信頼区間を構成

** 誤差分散の推定
- 一般に \(\sigma^2\) は *既知でない* ためデータから推定
  - \(\epsilon_i\) の平均は0
  - \(\sigma^2\) は \(\epsilon_i\) の共通の分散
- 誤差と回帰式の関係
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      \epsilon_i=Y_i-(\alpha+\beta X_i)
      \quad(i=1,\dotsc,n)      
    \end{equation}
  #+end_src
  #+end_quote
- \(\sigma^2\) の自然な推定量(良いとは限らない)
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      \hat{\sigma}^2
      =\frac{1}{n}\sum_{i=1}^n\hat{\epsilon}_i^2
      \quad\text{ただし}\quad\hat{\epsilon}_i
      =Y_i-(\hat{\alpha}+\hat{\beta}X_i),\quad(i=1,\dotsc,n)
    \end{equation}
  #+end_src
  #+end_quote

#+reveal: split
- *残差* \(\hat{\epsilon}_1,\dotsc,\hat{\epsilon}_n\) の性質
  (資料; 正規方程式)
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      \sum\hat{\epsilon}_i=0,\quad
      \sum\hat{\epsilon}_iX_i=0.
    \end{equation}
  #+end_src
  #+end_quote
- 残差の二乗平均の性質 (標本分散と同様の計算)
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      \mathbb{E}[\hat{\epsilon}_i^2]=\sigma^2(n{-}2)/n\quad(i=1,\dotsc,n)      
      % \mathbb{E}[\hat{\epsilon}_i^2]=\frac{n{-}2}{n}\sigma^2\quad(i=1,\dotsc,n)      
    \end{equation}
  #+end_src
  #+end_quote
- \(\sigma^{2}\) の不偏推定量
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      \hat{\sigma}^2=\frac{1}{n{-}2}\sum_{i=1}^n\hat{\epsilon}_i^2.
    \end{equation}
  #+end_src
  #+end_quote

** 回帰係数の性質
- \(\hat{\alpha},\hat{\beta}\) の分散の推定量 (資料; Gauss-Markovの定理)
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      \mathrm{s.e.}(\hat{\alpha})^2
      =\frac{\hat{\sigma}^2\sum_iX_i^2}{n\sum_i(X_i-\bar{X})^2},
      \quad
      \mathrm{s.e.}(\hat{\beta})^2
      =\frac{\hat{\sigma}^2}{\sum_i(X_i-\bar{X})^2}
    \end{equation}
  #+end_src
  #+end_quote
  - \(\mathrm{s.e.}(\hat{\alpha}),\mathrm{s.e.}(\hat{\beta})\) は *標準誤差* と呼ばれる
- 以下は \(\hat{\beta}\) と独立で自由度 \(n{-}2\) の \(\chi^2\) 分布に従う
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      \frac{(n{-}2)\mathrm{s.e.}(\hat{\beta})^2}{\mathrm{Var}(\hat{\beta})}
    \end{equation}
  #+end_src
  #+end_quote

** 回帰係数の区間推定
- 以下の確率変数は自由度 \(n{-}2\) の \(t\) 分布に従う
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      \frac{\hat{\beta}-\beta}{\mathrm{s.e.}(\hat{\beta})}
      =
      \frac{(\hat{\beta}-\beta)/\sqrt{\mathrm{Var}(\hat{\beta})}}{\sqrt{(n{-}2)\mathrm{s.e.}(\hat{\beta})^{2}/(n{-}2)\mathrm{Var}(\hat{\beta})}}
    \end{equation}
  #+end_src
  #+end_quote
- \(\gamma\in(0,1)\) に対する \(\beta\) の \(1-\gamma\) 信頼区間
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      \left[
        \hat{\beta}-t_{1{-}\gamma/2}(n{-}2)\cdot \mathrm{s.e.}(\hat{\beta}),\;
        \hat{\beta}+t_{1{-}\gamma/2}(n{-}2)\cdot \mathrm{s.e.}(\hat{\beta})
      \right]  
    \end{equation}
  #+end_src
  #+end_quote

** R : 区間推定の関数
- 関数 ~confint()~ : 係数の信頼区間を求める
  #+begin_src R :eval no
    confint(object, parm, level = 0.95, ...)
    ## object: 関数 lm で推定したモデル
    ## parm: 区間推定をするパラメタ．指定しなければ全て
    ## level: 信頼係数
    ## ...: 他のオプション．詳細は help(confint) を参照
  #+end_src
- 関数 ~predict()~ : 予測値の信頼区間を求める
  #+begin_src R :eval no
    predict(object, newdata, interval="confidence", level=0.95,..)
    ## object: 関数 lm で推定したモデル
    ## newdata: 予測値を計算する説明変数
    ## interval: 信頼区間 "confidence" (既定値は "none")
    ## level: 信頼係数 (既定値は0.95)
    ## ...: 他のオプション．詳細は help(predict.lm) を参照
  #+end_src


* 演習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
** 練習問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 前問で作成した回帰モデルについて
  区間推定を行いなさい．

#+begin_src R :eval no :exports none :tangle yes
  ### 練習問題 回帰モデルの区間推定
  ## 気候データによる例
  ## 前問で構成したモデルを用いる
  ## my_model: 1年分のモデル 
  confint(my_model)
  ## 区間推定を視覚化
  plot(formula(my_model),
       data=model.frame(my_model), # 用いたデータを取り出すことができる
       pch=20, col="blue")
  xrange <- with(tw_data,range(solar)) # 日射量の範囲を取得
  x <- seq(xrange[1], xrange[2], by=0.5) # 適当な刻み幅で説明変数を用意
  y <- predict(my_model,
               newdata=data.frame(solar=x), # 予測値を計算
               interval="confidence", level=0.95) # 信頼区間を付与
  matlines(x, y, lwd=2,
           lty=c(1,4,4), col=c("royalblue","steelblue","steelblue"))
  ## my_model2: 夏のモデル 
  confint(my_model2)
  plot(formula(my_model2),
       data=model.frame(my_model2),
       pch=20, col="orange")
  y <- predict(my_model2,
               newdata=data.frame(solar=x),
               interval="confidence", level=0.95)
  matlines(x, y, lwd=2,
           lty=c(1,4,4), col=c("red","pink","pink"))
#+end_src


* 回帰係数の有意性検定
** 回帰係数の有意性
- 説明変数 \(X\) が目的変数 \(Y\) を説明・予測するのに本当に役立っているかを検証
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      H_0:\beta=0\qquad\text{vs}\qquad H_1:\beta\neq0
    \end{equation}
  #+end_src
  #+end_quote
- \(\beta\) の *有意性の検定*
  #+begin_quote
  帰無仮説 \(H_0\) が有意水準 \(\gamma\) で棄却されるとき，
  \(\beta\) は有意水準 \(\gamma\) で *有意である* 
  #+end_quote
  # 条件(C)を仮定して検定の方法を考える

** 回帰係数の有意性検定
- 帰無仮説 \(H_0\) が正しければ以下の統計量
  は自由度 \(n{-}2\) の \(t\) 分布に従う 
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      t=\frac{\hat{\beta}}{\mathrm{s.e.}(\hat{\beta})}
    \end{equation}
  #+end_src
  #+end_quote
- 対立仮説 \(H_1\) が正しければ, 
  \(\hat{\beta}\) は0でない値 \(\beta\) に近い値を取ることが期待されるため，
  \(|t|\) は0から離れた値を取る

#+reveal: split
- 棄却域による検定
  #+begin_quote
  有意水準を \(\gamma\in(0,1)\) とし，
  \(\hat{\beta}\) の *\(t\) 値* が以下の場合には帰無仮説を棄却
  #+begin_src latex
    \begin{equation}
      |t| > t_{1-\gamma/2}(n{-}2)
    \end{equation}
  #+end_src
  #+end_quote
- \(p\) 値による検定
  #+begin_quote
  以下で定義される \(\hat{\beta}\) の *\(p\) 値* が
  \(\gamma\) 未満の場合に帰無仮説を棄却
  #+begin_src latex
    \begin{equation}
      \text{(\(p\) 値)}=2\int_{|t|}^\infty f(x)dx
    \end{equation}
  #+end_src
  #+end_quote
  # - 回帰における \(t\) 値と \(p\) 値:
  # - 検定統計量の値: \(\hat{\beta}\) の *\(t\) 値*
  # - 検定の \(p\) 値: \(\hat{\beta}\) の *\(p\) 値* 

** R : 係数の検定のための関数
- 関数 ~summary()~ : 推定されたモデルの情報を引き出す
  #+begin_src R :eval no
    summary(object)
    ## object: 関数 lm で推定したモデル
  #+end_src
- 出力 (リスト名 $"名前" で参照可能)
  - ~coefficients~ : 係数と \(t\) 値
  - ~fstatistics~ : \(F\) 値 (モデルの評価)


* 演習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
** 練習問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 前問で作成した回帰モデルについて
  係数の検定を行いなさい．

#+begin_src R :eval no :exports none :tangle yes
  ### 練習問題 回帰モデルの係数の検定
  ## 気候データによる例
  ## 前問で構成したモデルを用いる
  ## my_model: 1年分のモデル
  summary(my_model)
  ## 情報が多いので，整理してみる
  summary(my_model)$coef # 名前は識別できれば途中まででも可
  summary(my_model)$coef["solar",c("t value","Pr(>|t|)")]
  summary(my_model)$coef[2,3:4] # 上と同じ
  summary(my_model)$fstat # モデルの有意性の評価
  ## my_model2: 夏のモデル
  summary(my_model2)
  coef(summary(my_model2)) # 関数coefでも可
  coef(summary(my_model2))["solar",c("t value","Pr(>|t|)")]
  coef(my_model2) # 推定された係数のみ取り出す場合
  coef(summary(my_model2))[,"Estimate"] # 上と同じ
#+end_src


* 決定係数
** 決定係数
- \(X\) が \(Y\) の変動をどの程度説明できるかを数量化
- *決定係数* (あるいは *寄与率*)
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      R^{2}=
      \frac{\sum_{i=1}^{n}(\hat{Y}_{i}-\bar{Y})^{2}}{\sum_{i=1}^{n}(Y_{i}-\bar{Y})^{2}}
    \end{equation}
  #+end_src
  #+end_quote
- \(\hat{Y}_{i}\) は
  *あてはめ値* または *予測値* と呼ばれる
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      \hat{Y}_{i}=
      \hat{\alpha}+\hat{\beta}X_{i}\quad(i=1,\dotsc,n).  
    \end{equation}
  #+end_src
  #+end_quote

#+reveal: split
- 以下の等式が成立
  #+begin_quote
  #+begin_src latex
    \begin{align}
      &\hat{\epsilon}_i
        =Y_i-\hat{Y}_i\quad (i=1,\dotsc,n)\\
      &\sum_{i=1}^{n}\hat{\epsilon}_i=0,\\
      &\frac{1}{n}\sum_{i=1}^nY_i=\bar{Y},\\
      &\frac{1}{n}\sum_{i=1}^n\hat{Y}_i=\bar{Y}.
    \end{align}
  #+end_src
  #+end_quote

#+reveal: split
- 決定係数
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      R^{2}=
      \frac{\sum_{i=1}^{n}(\hat{Y}_{i}-\bar{Y})^{2}}{\sum_{i=1}^{n}(Y_{i}-\bar{Y})^{2}}
    \end{equation}
  #+end_src
  #+end_quote
- \(R^2\) の成分
  - \(R^2\) の分子 : あてはめ値の(標本平均まわりでの)変動
  - \(R^2\) の分母 : 目的変数の(標本平均まわりでの)変動
- \(R^2\) の意味
  - 回帰式が目的変数の変動をどの位説明できるか評価
  - 大きいほど説明力が高いと解釈される

** 決定係数の別表現
- \(R^2\) は以下のように書き直すことも可能
  - 目的変数の観測データとあてはめ値の相関の二乗
    #+begin_quote
    #+begin_src latex
      \begin{equation}
        R^{2}=
        \left\{
          \frac{\sum_{i=1}^{n}(\hat{Y}_{i}-\bar{Y})(Y_{i}-\bar{Y})}
          {\sqrt{\sum_{i=1}^{n}(\hat{Y}_{i}-\bar{Y})^{2}}
            \cdot
            \sqrt{\sum_{i=1}^{n}(Y_{i}-\bar{Y})^{2}}}
        \right\}^{2}
      \end{equation}
    #+end_src
    #+end_quote
  - 説明変数と目的変数の観測データの間の相関の二乗
    #+begin_quote
    #+begin_src latex
      \begin{equation}
        R^{2}=
        \left\{
          \frac{\sum_{i=1}^{n}(X_{i}-\bar{X})(Y_{i}-\bar{Y})}
          {\sqrt{\sum_{i=1}^{n}(X_{i}-\bar{X})^{2}}
            \cdot
            \sqrt{\sum_{i=1}^{n}(Y_{i}-\bar{Y})^{2}}}
        \right\}^{2}
      \end{equation}
    #+end_src
    #+end_quote

** 自由度調整済み決定係数
- 不偏分散による \(R^2\) の修正
  - 残差 \(\epsilon_i\) と目的変数 \(Y_i\) の標本分散による表現
    #+begin_quote
    #+begin_src latex
      \begin{equation}
        R^{2}
        =1-\frac{\frac{1}{n}\sum_{i=1}^{n}\hat{\epsilon}_{i}^{2}}{\frac{1}{n}\sum_{i=1}^{n}(Y_{i}-\bar{Y})^{2}}.
      \end{equation}
    #+end_src
    #+end_quote
  - 不偏推定量で代替 : *自由度調整済み決定係数* (または寄与率)
    #+begin_quote
    #+begin_src latex
      \begin{equation}
        \bar{R}^{2}
        =1-\frac{\frac{1}{n{-}2}\sum_{i=1}^{n}\hat{\epsilon}_{i}^{2}}{\frac{1}{n-1}\sum_{i=1}^{n}(Y_{i}-\bar{Y})^{2}}.
      \end{equation}
    #+end_src
    #+end_quote

** R : 決定係数のための関数
- 関数 ~summary()~ : 推定されたモデルの情報を引き出す
  #+begin_src R :eval no
    summary(object)
    ## object: 関数 lm で推定したモデル
  #+end_src
- 出力 (リスト名 $"名前" で参照可能)
  - ~r.squareds~ : 決定係数
  - ~adj.r.squareds~ : 自由度調整済み決定係数


* 演習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
** 練習問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 前問で作成した回帰モデルについて
  決定係数を確認しなさい．
- 説明変数として降水量を用いた回帰モデルについて
  検討しなさい．

#+begin_src R :eval no :exports none :tangle yes
  ### 練習問題 決定係数による回帰モデルの検討
  ## 気候データによる例
  ## 前問で構成したモデルを用いる
  ## my_model: 1年分のモデル (気温~日射量)
  summary(my_model) # 全情報の表示
  summary(my_model)$r.squared
  summary(my_model)$adj.r.squared
  
  ## my_model2: 夏のモデル (気温~日射量)
  summary(my_model2) # 全情報の表示
  summary(my_model2)$r.squared
  summary(my_model2)$adj.r.squared
  
  ## 降水量と気温の関係を調べる
  (my_model3 <- lm(temp ~ rain, # モデル式
                 data=tw_data)) 
  (my_model4 <- lm(formula(my_model3), # 上の式を用いる
                 data=tw_data, subset=month%in%7:9)) 
  
  ## my_model3: 1年分のモデル (気温~降水量)
  plot(formula(my_model3),
       data=model.frame(my_model3),
       pch=20, col="blue")
  abline(reg=my_model3, col="red", lwd=2)
  summary(my_model3)
  ## my_model3 に有意性はないことがわかる
  
  ## my_model4: 夏のモデル (気温~降水量)
  plot(formula(my_model4),
       data=model.frame(my_model4),
       pch=20, col="orange")
  abline(reg=my_model4, col="red", lwd=2)
  summary(my_model4)
  ## 夏場は雨が降ると気温が下がる傾向が有意にあることが読み取れる
  ## 決定係数が低いのはそもそも気温のばらつきが大きいことに起因すると考えられる
#+end_src

#+begin_src R :eval no :exports none :tangle yes
  ### 補遺
  ### ggplot2 を用いた線形回帰分析(単回帰)の例
  ### - Brain and Body Weights for 28 Species

  ## パッケージの読み込み
  require(MASS) 
  require(tidyverse) 
  require(ggfortify)

  ## データの読み込み ("MASS::Animals"を用いる)
  data(Animals)
  ## 以下 "Animals" で参照可能

  ## データの内容を確認
  help(Animals)  # 内容の詳細を表示 
  print(Animals) # データの表示

  ## データのプロット (normal plot)
  ggplot(Animals, # 用いるdata の指定
         aes(body, brain)) + # x軸，y軸に用いる列の指定
      geom_point(colour="royalblue") + # 点の追加
      labs(title="Brain and Body Weights (normal plot)",
           x="body [kg]", y="brain [g]") # タイトルと軸名の追加

  ## データのプロット (log plot)
  ggplot(Animals,
         aes(body, brain)) +
      scale_x_log10() + scale_y_log10() + # log-log plot を指定
      geom_point(colour="royalblue") +
      labs(title="Brain and Body Weights (log-log plot)",
           x="body [kg]", y="brain [g]")

  ## データの分布から両対数変換が分析においては適切であることがわかる

  ## 回帰分析 (単回帰)
  model <- lm(log(brain) ~ log(body), # 対数変換した変数で線形回帰
              data=Animals)
  summary(model) # 分析結果のまとめを表示

  ## あてはめ値を用いた回帰式の表示
  ggplot(Animals,
         aes(body, brain)) + 
      scale_x_log10() + scale_y_log10() + # log-log plot
      geom_line(aes(y=exp(predict(model,newdata=Animals))), 
                color="dodgerblue", lwd=1.2) +
      geom_text(size=3, label=rownames(Animals)) + # 各点の名前を追加
      labs(title="Brain and Body Weights",
           x="body [kg]", y="brain [g]")

  ## ggplot の機能を用いた信頼区間付きでの回帰式の表示
  ggplot(Animals,
         aes(body, brain)) + 
      scale_x_log10() + scale_y_log10() + # log-log plot
      geom_smooth(method='lm', formula=y ~ x, # 95%信頼区間付 (不要ならse=FALSE)
                  color="dodgerblue", lwd=1.2) + 
      geom_text(size=3, label=rownames(Animals)) + # 各点の名前を追加
      labs(title="Brain and Body Weights",
           x="body [kg]", y="brain [g]")

  ## 信頼区間・予測区間の推定
  yc <- exp(predict(model, 
                    interval="confidence", # 信頼区間を指定
                    newdata=Animals))
  ## predict は newdata で指定されたデータの fit, lwr, upr を返す
  colnames(yc) <- paste("c",colnames(yc),sep=".")
  ## 信頼区間であることを明示するために列名に "c." を追加
  yp <- exp(predict(model, 
                    interval="prediction", # 予測区間
                    newdata=Animals))
  colnames(yp) <- paste("p",colnames(yp),sep=".")
  ## 予測区間についても同様に "p.c" を追加

  ## 区間推定の結果を含めた data.frame を作成
  my_data <- cbind(Animals, yc, yp)

  ## 回帰式および信頼区間・予測区間の表示
  ggplot(my_data,
         aes(body, brain)) + 
      scale_x_log10() + scale_y_log10() + # log-log plot
      geom_line(aes(y=c.fit), # あてはめ値を用いて回帰直線
                color="dodgerblue", lwd=1.2) +
      geom_ribbon(aes(ymin=c.lwr,ymax=c.upr), # 信頼区間
                  fill="blue", alpha=0.2)+
      geom_ribbon(aes(ymin=p.lwr,ymax=p.upr), # 予測区間
                  fill="blue", alpha=0.1)+
      geom_text(size=3, label=rownames(my_data)) + # 各点の名前を追加
      labs(title="Brain and Body Weights",
           x="body [kg]", y="brain [g]")

  ## 診断プロット
  autoplot(model, colour="royalblue",
           smooth.colour="gray50", smooth.linetype="dashed",
           ad.colour="blue",
           label.size=3, label.n=5, label.colour="red")

  ## 外れ値を除いた回帰分析
  idx <- c(6,16,26) # 外れ値のindex
  model <- lm(log(brain) ~ log(body), data=Animals, subset=-idx)
  summary(model)

  ## 区間推定
  yc <- exp(predict(model, newdata=Animals, interval="confidence"))
  colnames(yc) <- paste("c",colnames(yc),sep=".")
  yp <- exp(predict(model, newdata=Animals, interval="prediction"))
  colnames(yp) <- paste("p",colnames(yp),sep=".")
  my_data <- cbind(Animals, yc, yp)

  ## 回帰式および信頼区間・予測区間の表示
  ggplot(my_data, aes(body, brain)) +
      scale_x_log10() + scale_y_log10() +
      geom_line(aes(y=c.fit), color="royalblue", lwd=1.2) +
      geom_ribbon(aes(ymin=c.lwr,ymax=c.upr), fill="blue", alpha=0.2)+
      geom_ribbon(aes(ymin=p.lwr,ymax=p.upr), fill="blue", alpha=0.1)+
      geom_text(size=3, label=rownames(my_data)) + 
      labs(title="Brain and Body Weights", x="body [kg]", y="brain [g]")

  ## 診断プロット
  autoplot(model, colour="royalblue",
           smooth.colour="gray50", smooth.linetype="dashed",
           ad.colour="blue",
           label.size=3, label.n=5, label.colour="red")
#+end_src

* Footnotes
* COMMENT ローカル変数
# Local Variables:
# org-latex-listings: minted
# End:
   
   
   
   
     
