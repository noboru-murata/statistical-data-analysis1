# Based on Jens Lechtenbörger's org/config.org @ https://gitlab.com/oer/oer-reveal
# original license identifiers are:
# SPDX-FileCopyrightText: 2017-2019 Jens Lechtenbörger
# SPDX-License-Identifier: CC-BY-SA-4.0

# Neither generate table of contents nor section numbers
#+OPTIONS: toc:nil num:nil

# Enable: browser history, fragment IDs in URLs, mouse wheel, links between presentations
#+OPTIONS: reveal_history:t reveal_fragmentinurl:t
#+OPTIONS: reveal_mousewheel:nil reveal_inter_presentation_links:t

# Disable separate PDF pages for each fragment.  Just use one per slide.
#+OPTIONS: reveal_pdfseparatefragments:nil

# Enable smart quotes
#+OPTIONS: ':t

# Transition styles: none/fade/slide/convex/concave/zoom/cube
#+REVEAL_TRANS: fade
#+REVEAL_THEME: oer-reveal

#+REVEAL_PLUGINS: (notes search zoom highlight)

# The following variables are non-standard.
# Do not display TOC-progress on title slide.
#+REVEAL_TITLE_SLIDE_STATE: no-toc-progress
# Do not display TOC-progress on TOC slide.
#+REVEAL_TOC_SLIDE_STATE: no-toc-progress
# Do not include TOC slide in TOC-progress.
#+REVEAL_TOC_SLIDE_CLASS: no-toc-progress
# Use different heading for TOC.
#+REVEAL_TOC_SLIDE_TITLE: Agenda

#+REVEAL_EXTRA_CSS: ./reveal.js/plugin/toc-progress/toc-progress.css
#+REVEAL_EXTRA_CSS: ./reveal.js/dist/theme/toc-style.css
#+REVEAL_EXTRA_CSS: ./reveal.js/dist/theme/fonts/source-sans-pro/source-sans-pro.css
#+REVEAL_EXTRA_CSS: ./reveal.js/plugin/accessibility/helper.css

# The following creates an empty footer, for which the css style defines
# a height that agrees with the TOC-progress footer’s height.
# In this way, the footer’s height is taken into account by reveal.js’s
# size calculations.
#+REVEAL_SLIDE_FOOTER: <br>
#+OPTIONS: reveal_toc_footer:t

# Use menu/chalkboard plugins
# chalkboard keybind
# e(dit): notes; w(rite): chalkboard;
# c(lear): notes/chalkboard; r(eset): notes/chalkbord
# x/y: next/previous color; d(ownload): draw data; 
# spotlight keybind
# t(oggle): spotlight; q(uark)/q(uit): presentation
#+REVEAL_EXTERNAL_PLUGINS: (( menu . "{ src: '%splugin/menu/menu.js'}") (chalkboard . "{ src: '%splugin/chalkboard/chalkboard.js'}") (spotlight . "{ src: '%splugin/spotlight/spotlight.js'}"))
#+REVEAL_EXTRA_OPTIONS: spotlight: { size: 90, initialPresentationMode: false }, chalkboard: { toggleChalkboardButton: { left: '80px' }, toggleNotesButton: { left: '130px'}}, keyboard: { 69: function() { RevealChalkboard.toggleNotesCanvas() }, 87: function() { RevealChalkboard.toggleChalkboard() }, 67: function() { RevealChalkboard.clear() }, 82: function() { RevealChalkboard.reset() }, 68: function() { RevealChalkboard.download() }, 88: function() { RevealChalkboard.colorNext() }, 89: function() { RevealChalkboard.colorPrev() }, 84: function() { RevealSpotlight.toggleSpotlight() }, 81: function() { RevealSpotlight.togglePresentationMode()}}
# Use custom title slide.
#+REVEAL_TITLE_SLIDE: ./reveal.js/title-slide/mycourse-title.html
# Use my css 
#+REVEAL_EXTRA_CSS: ./reveal.js/dist/theme/mycourse.css

# Set a default bib file.
#+MACRO: bibliographyfile bibliography:references.bib

# Macros to display square brackets (in texts of hyperlinks).
# Based on: https://emacs.stackexchange.com/questions/7792/can-i-make-links-in-org-mode-that-contain-brackets-or
# Square Bracket Open [
#+MACRO: BO @@latex:\char91{}@@@@html:&#91;@@
# Square Bracket Close ]
#+MACRO: BC @@latex:\char93{}@@@@html:&#93;@@

# MACRO for forced line break, e.g., in titles.
#+MACRO: BR @@latex:\\@@@@html:<br />@@

# Setup for PDF generation via LaTeX export.
#+LaTeX_CLASS: scrartcl
#+LaTeX_CLASS_OPTIONS: [10pt,oneside,fleqn]
#+LATEX_HEADER: \usepackage[style=plain,list=minted]{myhandout}
#+LATEX_HEADER: \usepackage[backend=biber,style=alphabetic]{biblatex}
#+LATEX_HEADER: \addbibresource{references.bib}
#+LATEX_HEADER: \newenvironment{notes}{\par\footnotesize}{\par}
#+LATEX_HEADER: \newenvironment{NOTES}{\par\footnotesize}{\par}
#+LATEX_HEADER: \newenvironment{leftcol}{\relax}{\relax}
#+LATEX_HEADER: \newenvironment{rightcol}{\relax}{\relax}
# #+LATEX_HEADER: \newenvironment{leftcol}{\begin{minipage}{.49\textwidth}}{\end{minipage}}
# #+LATEX_HEADER: \newenvironment{rightcol}{\begin{minipage}{.49\textwidth}}{\end{minipage}}
#+LATEX_HEADER: \newenvironment{leftcol30}{\begin{minipage}{.29\textwidth}}{\end{minipage}}
#+LATEX_HEADER: \newenvironment{leftcol40}{\begin{minipage}{.39\textwidth}}{\end{minipage}}
#+LATEX_HEADER: \newenvironment{leftcol60}{\begin{minipage}{.59\textwidth}}{\end{minipage}}
#+LATEX_HEADER: \newenvironment{leftcol70}{\begin{minipage}{.69\textwidth}}{\end{minipage}}
#+LATEX_HEADER: \newenvironment{rightcol30}{\begin{minipage}{.29\textwidth}}{\end{minipage}}
#+LATEX_HEADER: \newenvironment{rightcol40}{\begin{minipage}{.39\textwidth}}{\end{minipage}}
#+LATEX_HEADER: \newenvironment{rightcol60}{\begin{minipage}{.59\textwidth}}{\end{minipage}}
#+LATEX_HEADER: \newenvironment{rightcol70}{\begin{minipage}{.69\textwidth}}{\end{minipage}}
#+LATEX_HEADER: \usepackage{newunicodechar}
#+LATEX_HEADER: \newunicodechar{≈}{$\approx$}
#+LATEX_HEADER: \newunicodechar{⋮}{\vdots}
#+LATEX_HEADER: \newunicodechar{ }{~}
#+LATEX_HEADER: \usepackage{xcolor}
#+LATEX_HEADER: \definecolor{darkred}{named}{myDarkRed}
#+LATEX_HEADER: \definecolor{darkgreen}{named}{myDarkGreen}
#+LATEX_HEADER: \definecolor{darkblue}{named}{myDarkBlue}
#+LATEX_HEADER: \definecolor{darkorange}{named}{myDarkOrange}
# #+LATEX_HEADER: \definecolor{darkred}{rgb}{0.3, 0.0, 0.0}
# #+LATEX_HEADER: \definecolor{darkgreen}{rgb}{0.0, 0.3, 0.1}
# #+LATEX_HEADER: \definecolor{darkblue}{rgb}{0.0, 0.1, 0.3}
# #+LATEX_HEADER: \definecolor{darkorange}{rgb}{1.0, 0.55, 0.0}
#+LATEX_HEADER: \definecolor{sienna}{rgb}{0.53, 0.18, 0.09}
#+LATEX_HEADER: \hypersetup{colorlinks,linkcolor=darkblue,citecolor=darkblue,urlcolor=darkgreen}
#+LATEX_HEADER: \usepackage{newverbs}
#+LATEX_HEADER: \newverbcommand{\rverb}{\color{darkred}}{}
#+LATEX_HEADER: \newverbcommand{\gverb}{\color{darkgreen}}{}
#+LATEX_HEADER: \newverbcommand{\bverb}{\color{darkblue}}{}
#+LATEX_HEADER: \parindent=0pt

# Macros to display code in different colors.
#+MACRO: blackcode (eval (format "@@html:<code><span style=\"color:black; font-size:smaller;\">%s</span></code>@@ @@latex:\\verb|%s|@@" (org-html-encode-plain-text $1) $1))
#+MACRO: redcode (eval (format "@@html:<code><span style=\"color:darkred; font-size:smaller;\">%s</span></code>@@ @@latex:\\rverb|%s|@@" (org-html-encode-plain-text $1) $1))
#+MACRO: greencode (eval (format "@@html:<code><span style=\"color:darkgreen; font-size:smaller;\">%s</span></code>@@ @@latex:\\gverb|%s|@@" (org-html-encode-plain-text $1) $1))
#+MACRO: bluecode (eval (format "@@html:<code><span style=\"color:darkblue; font-size:smaller;\">%s</span></code>@@ @@latex:\\bverb|%s|@@" (org-html-encode-plain-text $1) $1))

# Concerning LaTeX export, the file extension is stripped for
# includegraphics commands, so a compatible format must be available.
# GIF images cannot be exported to LaTeX; variable
# oer-reveal--unsupported-tex-figure-formats contains a list of such
# formats.
# Finally, external images (those with a URL starting with "http[s]")
# are not exported to LaTeX.

#+MACRO: revealimg (eval (oer-reveal-export-attribution $1 $2 $3 $4 $5 $6))
#+MACRO: reveallicense (eval (oer-reveal-export-attribution $1 nil $2 $3 $4 $5 $6))

# Finally, revealgrid creates an image grid.
# Its six or seven arguments are as follows:
# 1. Unique grid number (e.g., starting from one)
# 2. File with names of images to position on the grid
# 3. Height of the grid as percentage of the height of the viewport
#    (used with CSS unit vh)
# 4/5. Numbers of (a) columns and (b) rows of the grid
# 6. Grid-template-areas to specify what image to position on what
#    grid cell(s); see, e.g.:
#    https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-areas
#    With this macro, the grid areas *must* be named ga1, ga2, ...
# 7. Optional indicator whether the grid as a whole (value grid) or individual
#    grid images (value t) should be fragmented (appear one after the other).
# This macro uses oer-reveal-export-image-grid in oer-reveal.el.
#+MACRO: revealgrid (eval (oer-reveal-export-image-grid $1 $2 $3 $4 $5 $6 $7))

# define my options/properties 
#+OPTIONS: date:t H:4 num:nil toc:nil \n:nil
#+OPTIONS: @:t ::t |:t ^:t -:t f:t *:t TeX:t LaTeX:t 
#+OPTIONS: skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+PROPERTY: header-args:R :session *R* :cache yes 
#+PROPERTY: header-args:R+ :exports both :results output
#+PROPERTY: header-args:R+ :tangle no
#+PROPERTY: header-args:latex :exports results :results raw
